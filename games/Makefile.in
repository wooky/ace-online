# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
AWK = @AWK@
BUILD_CC = @BUILD_CC@
CC = @CC@
DLLTOOL = @DLLTOOL@
LD = @LD@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PDA = @PDA@
PNG_CFLAGS = @PNG_CFLAGS@
PNG_LIBS = @PNG_LIBS@
RANLIB = @RANLIB@
VERSION = @VERSION@
Z_CFLAGS = @Z_CFLAGS@
Z_LIBS = @Z_LIBS@

bin_PROGRAMS =  	canfield 	freecell 	golf 	mastermind 	merlin 	minesweeper 	pegged 	solitaire 	taipedit 	taipei 	thornq


noinst_HEADERS = taipeilib.h taipei.h

CLEANFILES =  	canfield-img.c canfield-help.c 	freecell-img.c freecell-help.c 	golf-img.c golf-help.c 	mastermind-img.c mastermind-help.c 	merlin-img.c merlin-help.c 	minesweeper-img.c minesweeper-help.c 	pegged-img.c pegged-help.c 	solitaire-img.c solitaire-help.c 	taipedit-img.c taipedit-help.c 	taipei-img.c taipei-help.c 	thornq-img.c thornq-help.c


STRIP = @STRIP@

INCLUDES = -I$(srcdir)/../lib $(X_CFLAGS) @PDA@
LDFLAGS = $(X_LIBS)

canfield_SOURCES = canfield.c canfield-img.c
freecell_SOURCES = freecell.c freecell-help.c freecell-img.c
golf_SOURCES = golf.c golf-help.c golf-img.c
mastermind_SOURCES = mastermind.c mastermind-help.c mastermind-img.c
merlin_SOURCES = merlin.c merlin-help.c merlin-img.c
minesweeper_SOURCES = minesweeper.c minesweeper-help.c minesweeper-img.c
pegged_SOURCES = pegged.c pegged-help.c pegged-img.c
solitaire_SOURCES = solitaire.c solitaire-help.c solitaire-img.c
taipedit_SOURCES = taipedit.c taipeilib.c taipedit-help.c taipedit-img.c
taipei_SOURCES = taipei.c taipeilib.c taipei-help.c taipei-img.c
thornq_SOURCES = thornq.c thornq-help.c thornq-img.c

BUILT_SOURCES = canfield-img.c freecell-help.c freecell-img.c golf-help.c golf-img.c 	mastermind-help.c mastermind-img.c merlin-help.c merlin-img.c 	minesweeper-help.c minesweeper-img.c pegged-help.c pegged-img.c 	solitaire-help.c solitaire-img.c taipedit-help.c taipedit-img.c 	taipei-help.c taipei-img.c


LDADD = ../lib/libcards.la -lpng -lz -lX11 -lm

EXTRA_DIST = $(wildcard *.png) $(wildcard *.tp)

MINESWEEPER_PNGS = minesweeper.png minesweeper-x.png minesweeper-t.png 	minesweeper-c12.png minesweeper-c24.png minesweeper-c36.png 	minesweeper-c48.png


MASTERMIND_PNGS = mastermind-b.png mastermind-c.png mastermind-e.png 	mastermind-eb.png mastermind-g.png mastermind-k.png 	mastermind-o.png mastermind-p.png mastermind-r.png 	mastermind-w.png mastermind-y.png mastermind.png


TAIPEDITPNG = taipedit.png taipedit-bu.png taipedit-bs.png taipedit-bt.png taipei-tiles.png

THORNQ_PNG = thornq.png thornq-arrow.png thornq-noarrow.png
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
canfield_OBJECTS =  canfield.o canfield-img.o
canfield_LDADD = $(LDADD)
canfield_DEPENDENCIES =  ../lib/libcards.la
canfield_LDFLAGS = 
freecell_OBJECTS =  freecell.o freecell-help.o freecell-img.o
freecell_LDADD = $(LDADD)
freecell_DEPENDENCIES =  ../lib/libcards.la
freecell_LDFLAGS = 
golf_OBJECTS =  golf.o golf-help.o golf-img.o
golf_LDADD = $(LDADD)
golf_DEPENDENCIES =  ../lib/libcards.la
golf_LDFLAGS = 
mastermind_OBJECTS =  mastermind.o mastermind-help.o mastermind-img.o
mastermind_LDADD = $(LDADD)
mastermind_DEPENDENCIES =  ../lib/libcards.la
mastermind_LDFLAGS = 
merlin_OBJECTS =  merlin.o merlin-help.o merlin-img.o
merlin_LDADD = $(LDADD)
merlin_DEPENDENCIES =  ../lib/libcards.la
merlin_LDFLAGS = 
minesweeper_OBJECTS =  minesweeper.o minesweeper-help.o \
minesweeper-img.o
minesweeper_LDADD = $(LDADD)
minesweeper_DEPENDENCIES =  ../lib/libcards.la
minesweeper_LDFLAGS = 
pegged_OBJECTS =  pegged.o pegged-help.o pegged-img.o
pegged_LDADD = $(LDADD)
pegged_DEPENDENCIES =  ../lib/libcards.la
pegged_LDFLAGS = 
solitaire_OBJECTS =  solitaire.o solitaire-help.o solitaire-img.o
solitaire_LDADD = $(LDADD)
solitaire_DEPENDENCIES =  ../lib/libcards.la
solitaire_LDFLAGS = 
taipedit_OBJECTS =  taipedit.o taipeilib.o taipedit-help.o \
taipedit-img.o
taipedit_LDADD = $(LDADD)
taipedit_DEPENDENCIES =  ../lib/libcards.la
taipedit_LDFLAGS = 
taipei_OBJECTS =  taipei.o taipeilib.o taipei-help.o taipei-img.o
taipei_LDADD = $(LDADD)
taipei_DEPENDENCIES =  ../lib/libcards.la
taipei_LDFLAGS = 
thornq_OBJECTS =  thornq.o thornq-help.o thornq-img.o
thornq_LDADD = $(LDADD)
thornq_DEPENDENCIES =  ../lib/libcards.la
thornq_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/canfield-img.P .deps/canfield.P .deps/freecell-help.P \
.deps/freecell-img.P .deps/freecell.P .deps/golf-help.P \
.deps/golf-img.P .deps/golf.P .deps/mastermind-help.P \
.deps/mastermind-img.P .deps/mastermind.P .deps/merlin-help.P \
.deps/merlin-img.P .deps/merlin.P .deps/minesweeper-help.P \
.deps/minesweeper-img.P .deps/minesweeper.P .deps/pegged-help.P \
.deps/pegged-img.P .deps/pegged.P .deps/solitaire-help.P \
.deps/solitaire-img.P .deps/solitaire.P .deps/taipedit-help.P \
.deps/taipedit-img.P .deps/taipedit.P .deps/taipei-help.P \
.deps/taipei-img.P .deps/taipei.P .deps/taipeilib.P .deps/thornq-help.P \
.deps/thornq-img.P .deps/thornq.P
SOURCES = $(canfield_SOURCES) $(freecell_SOURCES) $(golf_SOURCES) $(mastermind_SOURCES) $(merlin_SOURCES) $(minesweeper_SOURCES) $(pegged_SOURCES) $(solitaire_SOURCES) $(taipedit_SOURCES) $(taipei_SOURCES) $(thornq_SOURCES)
OBJECTS = $(canfield_OBJECTS) $(freecell_OBJECTS) $(golf_OBJECTS) $(mastermind_OBJECTS) $(merlin_OBJECTS) $(minesweeper_OBJECTS) $(pegged_OBJECTS) $(solitaire_OBJECTS) $(taipedit_OBJECTS) $(taipei_OBJECTS) $(thornq_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu games/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

canfield: $(canfield_OBJECTS) $(canfield_DEPENDENCIES)
	@rm -f canfield
	$(LINK) $(canfield_LDFLAGS) $(canfield_OBJECTS) $(canfield_LDADD) $(LIBS)

freecell: $(freecell_OBJECTS) $(freecell_DEPENDENCIES)
	@rm -f freecell
	$(LINK) $(freecell_LDFLAGS) $(freecell_OBJECTS) $(freecell_LDADD) $(LIBS)

golf: $(golf_OBJECTS) $(golf_DEPENDENCIES)
	@rm -f golf
	$(LINK) $(golf_LDFLAGS) $(golf_OBJECTS) $(golf_LDADD) $(LIBS)

mastermind: $(mastermind_OBJECTS) $(mastermind_DEPENDENCIES)
	@rm -f mastermind
	$(LINK) $(mastermind_LDFLAGS) $(mastermind_OBJECTS) $(mastermind_LDADD) $(LIBS)

merlin: $(merlin_OBJECTS) $(merlin_DEPENDENCIES)
	@rm -f merlin
	$(LINK) $(merlin_LDFLAGS) $(merlin_OBJECTS) $(merlin_LDADD) $(LIBS)

minesweeper: $(minesweeper_OBJECTS) $(minesweeper_DEPENDENCIES)
	@rm -f minesweeper
	$(LINK) $(minesweeper_LDFLAGS) $(minesweeper_OBJECTS) $(minesweeper_LDADD) $(LIBS)

pegged: $(pegged_OBJECTS) $(pegged_DEPENDENCIES)
	@rm -f pegged
	$(LINK) $(pegged_LDFLAGS) $(pegged_OBJECTS) $(pegged_LDADD) $(LIBS)

solitaire: $(solitaire_OBJECTS) $(solitaire_DEPENDENCIES)
	@rm -f solitaire
	$(LINK) $(solitaire_LDFLAGS) $(solitaire_OBJECTS) $(solitaire_LDADD) $(LIBS)

taipedit: $(taipedit_OBJECTS) $(taipedit_DEPENDENCIES)
	@rm -f taipedit
	$(LINK) $(taipedit_LDFLAGS) $(taipedit_OBJECTS) $(taipedit_LDADD) $(LIBS)

taipei: $(taipei_OBJECTS) $(taipei_DEPENDENCIES)
	@rm -f taipei
	$(LINK) $(taipei_LDFLAGS) $(taipei_OBJECTS) $(taipei_LDADD) $(LIBS)

thornq: $(thornq_OBJECTS) $(thornq_DEPENDENCIES)
	@rm -f thornq
	$(LINK) $(thornq_LDFLAGS) $(thornq_OBJECTS) $(thornq_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = games

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu games/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


canfield-img.c : canfield.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ canfield.png

freecell-img.c : freecell.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ freecell.png

golf-img.c : golf.png golf-arrow.png golf-noarrow.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ golf.png golf-arrow.png golf-noarrow.png

minesweeper-img.c : $(MINESWEEPER_PNGS) ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ $(MINESWEEPER_PNGS)

merlin-img.c : merlin.png merlin-c.png merlin-b.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ merlin.png merlin-c.png merlin-b.png

mastermind-img.c : $(MASTERMIND_PNGS) ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ $(MASTERMIND_PNGS)

pegged-img.c : pegged.png pegged-h.png pegged-p.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ pegged.png pegged-h.png pegged-p.png

solitaire-img.c : solitaire.png ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ solitaire.png

taipei-img.c : ../lib/make-imglib taipei.png taipei-tiles.png Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ taipei taipei-tiles

taipedit-img.c : ../lib/make-imglib $(TAIPEDITPNG) Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ $(TAIPEDITPNG)
thornq-img.c : $(THORNQ_PNG) ../lib/make-imglib Makefile.am
	../lib/make-imglib -i $(srcdir) -n appimglib - $@ $(THORNQ_PNG)

%-help.c : %.html ../lib/text2c
	../lib/text2c $*_help < $< > $@

strip :
	$(STRIP) $(bin_PROGRAMS)

bin-tar :
	$(STRIP) $(bin_PROGRAMS)
	tar cvf - $(bin_PROGRAMS) | gzip -9 > ../ace-bin.tar.gz

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
